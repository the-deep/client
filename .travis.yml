sudo: required

services:
    - docker

before_install:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
    - chmod +x /tmp/cc-test-reporter

    - mkdir -p src/vendor

    - git clone https://github.com/toggle-corp/react-store.git src/vendor/react-store
    - git --git-dir=src/vendor/react-store/.git --no-pager show --pretty=fuller --quiet
    - cp src/vendor/react-store/stylesheets/_user-imports-sample.scss src/vendor/react-store/stylesheets/_user-imports.scss

    - git clone https://github.com/toggle-corp/ravl.git src/vendor/ravl
    - git --git-dir=src/vendor/ravl/.git --no-pager show --pretty=fuller --quiet

    - git clone https://github.com/timilsinabishal/react-components.git src/vendor/react-components
    - git --git-dir=src/vendor/react-components/.git --no-pager show --pretty=fuller --quiet

    - docker pull thedeep/deep-client:latest
    - docker build --cache-from thedeep/deep-client:latest --tag thedeep/deep-client:latest .

before_script:
    - npm install -g codecov
    - /tmp/cc-test-reporter before-build

script:
    - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    - docker run -t -v `pwd`/coverage:/code/coverage thedeep/deep-client:latest bash -c 'export CI=true && yarn install && yarn test'

after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - codecov
    - /tmp/cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT -p /code/
    - docker push thedeep/deep-client:latest

notifications:
  slack:
    rooms:
      - secure: "gfOnZR7lqTcyh83fcmHZ8jQ9AH9Es1PzkRbFg94LF/lCoIAKQlvSJkGEjk1gehEKkQTLNj2rMJnZmws6rYQsDHYlQrz57Ez3bcyKZ8xQgT1ubMc2BU5xU5yHwYIdXDtIAFs1XD+kwwLdUeKWPTu4JJgKnCq3IjCzPxElvnzxcuPK535fYdVY6TQhYc0QQHjMhFLLL+GJKxA2L8q3TGMhkKANFRi7z76uU5qfmdiUaydUOHPHEioKS5z5N9kQOYn2JarHn39Pxo0KenNLge81uONhoA9rpxbcTj5htqROh2L265GF5WCVVPBKMQBaXvVlhDPBbOuBKjUsGKYSTzqu8OS68Gnn7mfTlYBFRgjLfMSdnGmvQBdsPbcJ5ZbLXa9gM5lFknOFbHzSgB6+wv9GhBLk7oeswpUfW8zvbewG9+27QisXaHMFpuwOdFtnl6eYB/Wim+q67PTCCwpFYZAer4F8sx3+aSUrtoD2rBwhI0DxFDkYBgKaAmjH1U204Wq+T3E1Vew2P+zwLQK5VWI0+vBQh7t7OQdl28rcD1QZwUVOnj7jCo/WYF9DK6YaUJ88GpREbzJSDZyMt4ayghMHmMgIFNLZ3NkOP+Z/zY7nYdeTtfIcyE1rLuC/PJ7uykd7/lW0T7l0QPTftcOvJI1GBEdLXZIf6S9xpop29udcljE="
